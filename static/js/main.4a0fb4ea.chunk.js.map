{"version":3,"sources":["components/cell.jsx","context/boardContext.js","components/common/inputField.jsx","components/common/switch.jsx","components/startBox.jsx","components/table.jsx","utils/chunkArray.js","utils/calculateResult.js","App.js","index.js"],"names":["Cell","props","style","height","width","className","classStr","value","winner","getClassNames","onClick","handleClick","toUpperCase","id","BoardContext","React","createContext","displayName","InputField","marginBottom","htmlFor","label","type","placeholder","charAt","slice","onChange","handleChange","autocomplete","Switch","checked","StartBox","currentTarget","data","state","setState","handleSubmit","e","preventDefault","context","resetCells","setPlayerNames","playerX","trim","playerO","setStarter","xStarter","setStarted","this","playerNames","x","o","starter","padding","Component","contextType","Table","useContext","cells","array","chunk_size","numsPerGroup","Math","ceil","length","Array","fill","map","_","i","chunkArray","currentPlayer","minWidth","row","index","cell","setCell","setPlayer","trigger","nested","position","winnerQ","index1","index2","index3","calculateResult","result","filter","App","indexOf","target","player","xName","oName","renderContent","isStarted","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a0fb4ea.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Cell = (props) => {\r\n  const getClassNames = () => {\r\n    let classStr = \"btn btn-primary fs-1 m-2\";\r\n    if (props.value || props.winner) {\r\n      classStr += \" disabled\";\r\n    }\r\n    return classStr;\r\n  };\r\n\r\n  return (\r\n    <button\r\n      style={{ height: 90, width: 90 }}\r\n      className={getClassNames()}\r\n      onClick={props.handleClick}\r\n    >\r\n      {props.value ? props.value.toUpperCase() : props.id}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Cell;\r\n","import React from \"react\";\r\n\r\nconst BoardContext = React.createContext();\r\nBoardContext.displayName = \"BoardContext\";\r\nexport default BoardContext;\r\n","import React from \"react\";\r\n\r\nconst InputField = (props) => {\r\n  return (\r\n    <div className=\"form-group\" style={{ marginBottom: 15 }}>\r\n      <label\r\n        className=\"text-light\"\r\n        htmlFor={props.id}\r\n        style={{ marginBottom: 5 }}\r\n      >\r\n        {props.label}\r\n      </label>\r\n      <input\r\n        type={props.type}\r\n        className=\"form-control\"\r\n        id={props.id}\r\n        placeholder={\r\n          props.label.charAt(0).toUpperCase() + props.label.slice(1) + \"...\"\r\n        }\r\n        value={props.value}\r\n        onChange={props.handleChange}\r\n        autocomplete=\"off\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputField;\r\n","import React from \"react\";\r\n\r\nconst Switch = (props) => {\r\n  return (\r\n    <div className=\"form-check form-switch\" style={{ marginBottom: 15 }}>\r\n      <input\r\n        className=\"form-check-input\"\r\n        type=\"checkbox\"\r\n        id={props.id}\r\n        onChange={props.handleChange}\r\n        checked={props.value}\r\n      />\r\n      <label className=\"form-check-label text-light\" htmlFor={props.id}>\r\n        {props.label}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Switch;\r\n","import React, { Component } from \"react\";\r\nimport InputField from \"./common/inputField\";\r\nimport Switch from \"./common/switch\";\r\nimport BoardContext from \"../context/boardContext\";\r\n\r\nclass StartBox extends Component {\r\n  static contextType = BoardContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: {\r\n        playerX: \"\",\r\n        playerO: \"\",\r\n        xStarter: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const data = {\r\n      playerX: this.context.playerNames.x || \"\",\r\n      playerO: this.context.playerNames.o || \"\",\r\n      xStarter: this.context.starter === \"x\" ? true : false,\r\n    };\r\n    this.setState({ data });\r\n  }\r\n\r\n  handleChange = ({ currentTarget }) => {\r\n    const data = { ...this.state.data };\r\n    data[currentTarget.id] =\r\n      currentTarget.type === \"checkbox\"\r\n        ? currentTarget.checked\r\n        : currentTarget.value;\r\n    this.setState({ data });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    const { data } = this.state;\r\n    e.preventDefault();\r\n    this.context.resetCells();\r\n    this.context.setPlayerNames(data.playerX.trim(), data.playerO.trim());\r\n    this.context.setStarter(data.xStarter ? \"x\" : \"o\");\r\n    this.context.setStarted(true);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bg-dark rounded\" style={{ padding: 20 }}>\r\n        <form autocomplete=\"off\">\r\n          <InputField\r\n            label=\"Player X's name\"\r\n            id=\"playerX\"\r\n            handleChange={this.handleChange}\r\n            type=\"text\"\r\n            value={this.state.data.playerX}\r\n          />\r\n          <InputField\r\n            label=\"Player O's name\"\r\n            id=\"playerO\"\r\n            handleChange={this.handleChange}\r\n            type=\"text\"\r\n            value={this.state.data.playerO}\r\n          />\r\n          <Switch\r\n            label=\"Player X starts first\"\r\n            id=\"xStarter\"\r\n            handleChange={this.handleChange}\r\n            value={this.state.data.xStarter}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n            onClick={this.handleSubmit}\r\n          >\r\n            Start\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StartBox;\r\n","import React, { useContext } from \"react\";\r\nimport Cell from \"./cell\";\r\nimport BoardContext from \"../context/boardContext\";\r\nimport chunkArray from \"../utils/chunkArray\";\r\nimport StartBox from \"./startBox\";\r\nimport Popup from \"reactjs-popup\";\r\n\r\nconst Table = (props) => {\r\n  const context = useContext(BoardContext);\r\n  const handleClick = (cell) => {\r\n    if (context.currentPlayer === \"x\") {\r\n      context.setCell(cell, \"x\");\r\n      context.setPlayer(\"o\");\r\n    } else {\r\n      context.setCell(cell, \"o\");\r\n      context.setPlayer(\"x\");\r\n    }\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    context.setPlayer(context.starter);\r\n    context.resetCells();\r\n  };\r\n\r\n  const handleChangeSettings = () => {\r\n    context.resetCells();\r\n    context.setStarted(false);\r\n  };\r\n\r\n  const renderStatus = () => {\r\n    if (props.winner === -1) return \"It's a tie\";\r\n    if (props.winner)\r\n      return (\r\n        (context.playerNames[props.winner] || props.winner.toUpperCase()) +\r\n        \" won the game\"\r\n      );\r\n    return (\r\n      (context.playerNames[context.currentPlayer] ||\r\n        context.currentPlayer.toUpperCase()) + \"'s turn\"\r\n    );\r\n  };\r\n\r\n  const cells = chunkArray(context.cells, 3);\r\n  return (\r\n    <div\r\n      className=\"position-absolute top-50 start-50 translate-middle bg-dark rounded text-center\"\r\n      style={{ padding: 10 }}\r\n    >\r\n      <p className=\"text-light fs-3\">{renderStatus()}</p>\r\n      <div className=\"container\" style={{ minWidth: 342 }}>\r\n        {cells.map((row, index) => (\r\n          <div key={index}>\r\n            {row.map((cell) => (\r\n              <Cell\r\n                id={cell.id}\r\n                key={cell.id}\r\n                value={cell.value}\r\n                handleClick={() => handleClick(cell)}\r\n                winner={props.winner}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {props.winner && (\r\n        <div>\r\n          <button className=\"btn btn-primary m-2\" onClick={handleRestart}>\r\n            Restart\r\n          </button>\r\n          <Popup\r\n            trigger={\r\n              <button\r\n                className=\"btn btn-primary m-2\"\r\n                onClick={handleChangeSettings}\r\n              >\r\n                Change Settings\r\n              </button>\r\n            }\r\n            nested\r\n            position=\"top\"\r\n          >\r\n            <StartBox />\r\n          </Popup>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","export default function chunkArray(array, chunk_size) {\r\n  const numsPerGroup = Math.ceil(array.length / chunk_size);\r\n  return new Array(3)\r\n    .fill(\"\")\r\n    .map((_, i) => array.slice(i * numsPerGroup, (i + 1) * numsPerGroup));\r\n}\r\n","const winnerQ = (cells, index1, index2, index3) => {\r\n  if (\r\n    cells[index1].value === cells[index2].value &&\r\n    cells[index2].value === cells[index3].value &&\r\n    cells[index1].value\r\n  ) {\r\n    return cells[index1].value;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default function calculateResult(cells) {\r\n  const result =\r\n    winnerQ(cells, 0, 1, 2) ||\r\n    winnerQ(cells, 3, 4, 5) ||\r\n    winnerQ(cells, 6, 7, 8) ||\r\n    winnerQ(cells, 0, 4, 8) ||\r\n    winnerQ(cells, 2, 4, 6) ||\r\n    winnerQ(cells, 1, 4, 7) ||\r\n    winnerQ(cells, 0, 3, 6) ||\r\n    winnerQ(cells, 2, 5, 8);\r\n  if (!cells.filter((cell) => cell.value === null).length && !result) return -1;\r\n  return result;\r\n}\r\n","import Table from \"./components/table\";\nimport BoardContext from \"./context/boardContext\";\nimport { Component } from \"react\";\nimport calculateResult from \"./utils/calculateResult\";\nimport StartBox from \"./components/startBox\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPlayer: \"o\",\n      playerNames: { x: null, o: null },\n      cells: [\n        { id: 1, value: null },\n        { id: 2, value: null },\n        { id: 3, value: null },\n        { id: 4, value: null },\n        { id: 5, value: null },\n        { id: 6, value: null },\n        { id: 7, value: null },\n        { id: 8, value: null },\n        { id: 9, value: null },\n      ],\n      isStarted: false,\n      starter: \"o\",\n    };\n  }\n\n  setCell = (cell, value) => {\n    const cells = [...this.state.cells];\n    const index = cells.indexOf(cell);\n    const target = { ...cells[index] };\n    target.value = value;\n    cells[index] = target;\n    this.setState({ cells });\n  };\n\n  setPlayer = (player) => {\n    this.setState({ currentPlayer: player });\n  };\n\n  setPlayerNames = (xName, oName) => {\n    const playerNames = { ...this.state.playerNames };\n    playerNames.x = xName;\n    playerNames.o = oName;\n    this.setState({ playerNames });\n  };\n\n  resetCells = () => {\n    const cells = this.state.cells.map((cell) => {\n      cell.value = null;\n      return cell;\n    });\n    this.setState({ cells });\n  };\n\n  renderContent = () => {\n    if (this.state.playerNames.x === null || !this.state.isStarted) {\n      return <StartBox />;\n    } else {\n      return <Table winner={calculateResult(this.state.cells)} />;\n    }\n  };\n\n  setStarted = (isStarted) => {\n    this.setState({ isStarted });\n  };\n\n  setStarter = (starter) => {\n    this.setState({ starter, currentPlayer: starter });\n  };\n\n  render() {\n    return (\n      <BoardContext.Provider\n        value={{\n          cells: this.state.cells,\n          currentPlayer: this.state.currentPlayer,\n          playerNames: this.state.playerNames,\n          setCell: this.setCell,\n          setPlayer: this.setPlayer,\n          setPlayerNames: this.setPlayerNames,\n          resetCells: this.resetCells,\n          isStarted: this.state.isStarted,\n          setStarted: this.setStarted,\n          starter: this.state.starter,\n          setStarter: this.setStarter,\n        }}\n      >\n        <div\n          className=\"container position-absolute top-50 start-50 translate-middle\"\n          style={{ padding: 30 }}\n        >\n          {this.renderContent()}\n        </div>\n      </BoardContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}